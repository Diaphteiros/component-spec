$id: 'https://gardener.cloud/schemas/component-descriptor-v2'
$schema: 'https://json-schema.org/draft/2020-12/schema'
description: 'Gardener Component Descriptor v2 schema'

definitions:
  meta:
    type: 'object'
    description: 'component descriptor metadata'
    required:
      - 'schemaVersion'
    properties:
      schemaVersion:
        type: 'string'

  label:
    type: 'object'
    required:
      - 'name'
      - 'value'

  componentName:
    type: 'string'
    description: 'Component Names MUST start with a valid domain name (as specified by RFC-1034, RFC-1035) with an optional URL path suffix (as specified by RFC-1738)'

  identityAttribute:
    type: 'object'
    propertyNames: { $ref: '#/definitions/identityAttributeKey' }

  identityAttributeKey:
    type: string
    minLength: 2
    pattern: '^[a-z0-9]([-_+a-z0-9]*[a-z0-9])?$'

  relaxedSemver:
    # taken from semver.org and adjusted to allow an optional leading 'v', major-only, and major.minor-only
    # this means the following strings are all valid relaxedSemvers:
    # 1.2.3
    # 1.2.3-foo+bar
    # v1.2.3
    # v1.2.3-foo+bar
    # 1.2
    # 1
    # v1
    # v1.2
    # v1-foo+bar
    type: 'string'
    pattern: '^[v]?(0|[1-9]\d*)(?:\.(0|[1-9]\d*))?(?:\.(0|[1-9]\d*))?(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$'

  repositoryContext:
    type: 'object'
    required:
      - 'type'
    properties:
      type:
        type: 'string'

  access:
    type: 'object'
    description: 'base type for the access of a source or resource'
    required:
      - 'type'
    properties:
      type:
        type: 'string'

  source:
    type: 'object'
    required:
      - name
      - version
      - type
      - access
    properties:
      name:
        type: 'string'
        $ref: '#/definitions/identityAttributeKey'
      extraIdentity:
        $ref: '#/definitions/identityAttribute'
      version:
        $ref: '#/definitions/relaxedSemver'
      type:
        type: 'string'
      labels:
        type: 'array'
        items:
          $ref: '#/definitions/label'
      access:
        anyOf:
          - $ref: '#/definitions/access'

  componentReference:
    type: 'object'
    description: 'a reference to a component'
    required:
      - 'name'
      - 'componentName'
      - 'version'
    properties:
      name:
        type: 'string' # actually: component-type w/ special restrictions
        $ref: '#/definitions/identityAttributeKey'
      extraIdentity:
        $ref: '#/definitions/identityAttribute'
      componentName:
        $ref: '#/definitions/componentName'
      version:
        $ref: '#/definitions/relaxedSemver'
      labels:
        type: 'array'
        items:
          $ref: '#/definitions/label'

  resource:
    type: 'object'
    description: 'base type for resources'
    required:
      - 'name'
      - 'version' # for local resources, this must match component's version
      - 'type'
      - 'relation'
      - 'access'
    properties:
      name:
        type: 'string'
        $ref: '#/definitions/identityAttributeKey'
      extraIdentity:
        $ref: '#/definitions/identityAttribute'
      version:
        $ref: '#/definitions/relaxedSemver'
      type:
        type: 'string'
#      srcRefs:
#        type: 'array'
#        items:
#          $ref: '#/definitions/srcRef'
      relation:
        type: 'string'
        enum: ['local', 'external']
      labels:
        type: 'array'
        items:
          $ref: '#/definitions/label'
      access:
        anyOf:
        - $ref: '#/definitions/access'
        - $ref: '#/definitions/localBlobAccess'
        - $ref: '#/definitions/localOciArtefactAccess'

#  srcRef:
#    type: 'object'
#    description: 'a reference to a (component-local) source'
#    properties:
#      identitySelector:
#        $ref: '#/definitions/identityAttribute'
#      labels:
#        type: 'array'
#        items:
#          $ref: '#/definitions/label'

  localBlobAccess:
    type: 'object'
    required:
      - 'type'
      - 'digest'
    properties:
      type:
        type: 'string'
        enum: [ 'localOciBlob' ]
      digest:
        description: 'identifier of the local blob within the current component descriptor'
        type: 'string'

  localOciArtefactAccess:
    type: 'object'
    required:
      - 'type'
      - 'ociArtefactName'
      - 'tag'
    properties:
      type:
        type: 'string'
        enum: [ 'localOciArtefact' ]
      ociArtefactName:
        description: 'name of the local oci artefact within the current repository'
        type: 'string'
      tag:
        description: 'tag of the local oci artefact'
        $ref: '#/definitions/relaxedSemver'

  component:
    type: 'object'
    description: 'a component'
    required:
      - 'name'
      - 'version'
      - 'repositoryContexts'
      - 'provider'
      - 'sources'
      - 'componentReferences'
      - 'resources'
    properties:
      name:
        $ref: '#/definitions/componentName'
      version:
        $ref: '#/definitions/relaxedSemver'
      repositoryContexts:
        type: 'array'
        items:
          $ref: '#/definitions/repositoryContext'
      provider:
        type: 'string'
      labels:
        type: 'array'
        items:
          $ref: '#/definitions/label'
      sources:
        type: 'array'
        items:
          $ref: '#/definitions/source'
      componentReferences:
        type: 'array'
        items:
          $ref: '#/definitions/componentReference'
      resources:
        type: 'array'
        items:
          $ref: '#/definitions/resource'


type: 'object'
required:
  - 'meta'
  - 'component'
properties:
  meta:
    $ref: '#/definitions/meta'
  component:
    $ref: '#/definitions/component'
